==================
Simple if
==================

if (true) {
    return 5;
}

---
(source_file
  (if_statement
    condition: (boolean_literal)
    body: (block
      (return_statement (number_literal))
    )
  )
)

==================
If with complex condition
==================

if (a < 5 && b.c == 3) {
    return 5;
}

---
(source_file
  (if_statement
    condition: (binary_numeric_operator
    left: (binary_numeric_operator
      left: (identifier)
      right: (number_literal))
    right: (binary_numeric_operator
      left: (field_expression
        parent: (identifier)
        field: (field_identifier))
      right: (number_literal)))
    body: (block
      (return_statement (number_literal))
    )
  )
)

==================
Single statement if
==================

if (true)
    return 5;
u8 ident;

---
(source_file
  (if_statement
    condition: (boolean_literal)
    body: (return_statement (number_literal))
  )
  (variable_definition
    type: (primitive_type)
    name: (identifier))
)

==================
Nested single statement if else-if else
==================

if (true)
    return 5;
else if (true)
    return 6;
else
    return 7;

u8 ident;

---
(source_file
  (if_statement
    condition: (boolean_literal)
    body: (return_statement (number_literal))
    else: (if_statement
      condition: (boolean_literal)
      body: (return_statement (number_literal))
      else: (return_statement (number_literal))
    )
  )
  (variable_definition
    type: (primitive_type)
    name: (identifier))
)

==================
Multi statement if
==================

if (true) {
    u8 a;
    a += 5;
    return a;
}

---
(source_file
  (if_statement
    condition: (boolean_literal)
    body: (block
      (variable_definition type: (primitive_type) name: (identifier))
      (assignation_statement left: (identifier) right: (number_literal) )
      (return_statement (identifier))
    )
  )
)
